#!/usr/bin/env bash

# verify arguments
if [ ${#} -ne 2 ]; then
    echo "Usage: kattis [problem URL] [template]"
    exit 1
fi
if python3 -c "exit('kattis.com' in '${1}')"; then
    echo "Error: not a Kattis URL."
    exit 1
fi

# establish KATTISROOT
if [ -z ${KATTISROOT} ]; then
    echo "No default \$KATTISROOT is set on this device."
    echo "Please enter your Kattis home directory: "
    read KATTISROOT
fi
if [ ! -d ${KATTISROOT} ]; then
    echo "Error: invalid Kattis root directory (${KATTISROOT})."
    exit 1
fi
cd ${KATTISROOT}

# initialize variables
url=${1}
template=${2}
solution=${template}
problem=$(python3 -c "print('${url}'.split('?')[0].split('/')[-1])")

# initialize problem directory
if [ ! -d problems/${problem} ]; then
    mkdir -p problems/${problem}
    cd problems/${problem}
    echo ${url} > .kattispage
    ${KATTISROOT}/scripts/download_tests
    cd ${KATTISROOT}
fi

# resolve template aliases
if [ ! -d templates/${template} ]; then
    found="n"
    for template_dir in $(ls templates); do
        if [ ! -z $(grep "^${language}$" templates/${template_dir}/aliases) ]; then
            template=${template_dir}
            found="y"
            break
        fi
    done
    if [ ${found} == "n" ]; then
        echo "Error: unknown template '${template}'."
        exit 1
    fi
fi
if [ -d problems/${problem}/${solution} ]; then
    echo "Error: a solution for ${problem} named '${solution}' already exists."
    exit 1
fi

# copy template and initialize solution directory
cp -r templates/${template} problems/${problem}/${solution}
cd problems/${problem}/${solution}
./template ${problem}
rm aliases template
echo "${template} template created at problems/${problem}/${solution}"
